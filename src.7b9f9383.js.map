{"version":3,"sources":["code.js/timer.js","index.js"],"names":["refs","frontSide","document","querySelector","days","hours","mins","secs","TIME_INTERVAL","CountdownTimer","selector","targetDate","timeId","currentTime","Date","now","difference","timeForCount","receiveTime","clockFace","clearInterval","textContent","createTime","setInterval","value","String","padStart","time","pad","Math","floor","forTimer","startCounting"],"mappings":";;;AAsEA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EArEA,IAAMA,EAAO,CACTC,UAAWC,SAASC,cAAc,YAClCC,KAAMF,SAASC,cAAc,uBAC7BE,MAAOH,SAASC,cAAc,wBAC9BG,KAAMJ,SAASC,cAAc,uBAC7BI,KAAML,SAASC,cAAc,wBAG3BK,EAAgB,IAEhBC,EAAAA,WAEuC,SAAA,IAAJ,IAAA,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAxBC,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAkB,EAAA,KAAA,GAChCC,KAAAA,OAAS,KACTF,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EAsD1B,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,aAnDI,MAAA,WACUE,IAAAA,EAAcC,KAAKC,MACnBC,EAAa,KAAKL,WAAaE,EAC/BI,EAAe,KAAKC,YAAYF,GAInCA,GAFEG,KAAAA,UAAUF,GAEZD,EAAa,EAGZ,OAFAI,cAAc,KAAKR,aACnBZ,EAAKC,UAAUoB,YAAc,0CA0CzC,CAAA,IAAA,gBArCI,MAAA,WAAgB,IAAA,EAAA,KACPC,KAAAA,aAEAV,KAAAA,OAASW,YAAY,WAC1B,EAAKD,cAEHd,KA+BV,CAAA,IAAA,MA5BI,MAAA,SAAIgB,GACOC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OA2BzC,CAAA,IAAA,YAxBI,MAAA,SAAqC,GAA1BtB,IAAAA,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAE1BP,EAAKI,KAAKiB,YAAiBjB,GAAAA,OAAAA,GAC3BJ,EAAKK,MAAMgB,YAAiBhB,GAAAA,OAAAA,GAC5BL,EAAKM,KAAKe,YAAiBf,GAAAA,OAAAA,GAC3BN,EAAKO,KAAKc,YAAiBd,GAAAA,OAAAA,KAmBnC,CAAA,IAAA,cAhBI,MAAA,SAAYoB,GAMD,MAAA,CAACvB,KALK,KAAKwB,IAAIC,KAAKC,MAAMH,EAAQ,QAK3BtB,MAJA,KAAKuB,IAAIC,KAAKC,MAAOH,EAAQ,MAAyB,OAI/CrB,KAHR,KAAKsB,IAAIC,KAAKC,MAAOH,EAAQ,KAAoB,MAGnCpB,KAFd,KAAKqB,IAAIC,KAAKC,MAAOH,EAAQ,IAAc,WAYhE,EA3DMlB,GAsDAsB,EAAW,IAAItB,EAAe,CAChCC,SAAU,WACVC,WAAY,IAAIG,KAAK,iBAGzBiB,EAASC;;ACrET,aADA,QAAA,oBACA,QAAA","file":"src.7b9f9383.js","sourceRoot":"..\\src","sourcesContent":["\r\nconst refs = {\r\n    frontSide: document.querySelector('#timer-1'),\r\n    days: document.querySelector('[data-value=\"days\"]'),\r\n    hours: document.querySelector('[data-value=\"hours\"]'),\r\n    mins: document.querySelector('[data-value=\"mins\"]'),\r\n    secs: document.querySelector('[data-value=\"secs\"]'),\r\n}\r\n\r\nconst TIME_INTERVAL = 1000;\r\n\r\nclass CountdownTimer {\r\n\r\n    constructor({selector, targetDate} = {}) {\r\n        this.timeId = null;\r\n        this.selector = selector;\r\n        this.targetDate = targetDate;\r\n    }\r\n\r\n    createTime() {\r\n        const currentTime = Date.now();\r\n        const difference = this.targetDate - currentTime;\r\n        const timeForCount = this.receiveTime(difference);\r\n        // console.log(`${days}:${hours}:${mins}:${secs}`);\r\n        this.clockFace(timeForCount);\r\n\r\n        if(difference < 0) {\r\n            clearInterval(this.timeId);\r\n            refs.frontSide.textContent = \"Поздравляем с началом учебного года!\"\r\n            return;\r\n        };\r\n    };\r\n\r\n    startCounting() {\r\n        this.createTime();\r\n\r\n        this.timeId = setInterval(() => {\r\n        this.createTime()\r\n      \r\n       }, TIME_INTERVAL) \r\n    };\r\n\r\n    pad(value) {\r\n        return String(value).padStart(2, '0');\r\n    }\r\n\r\n    clockFace({days, hours, mins, secs}) {\r\n        // refs.frontSide.textContent = `${days}:${hours}:${mins}:${secs}`;\r\n        refs.days.textContent = `${days}`;\r\n        refs.hours.textContent = `${hours}`;\r\n        refs.mins.textContent = `${mins}`;\r\n        refs.secs.textContent = `${secs}`;\r\n    }\r\n\r\n    receiveTime(time) {   \r\n        const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));    \r\n\r\n        return {days, hours, mins, secs};\r\n        }\r\n\r\n};\r\n\r\nconst forTimer = new CountdownTimer({\r\n    selector: '#timer-1',\r\n    targetDate: new Date('Sep 1, 2021'), \r\n});\r\n\r\nforTimer.startCounting();\r\n","import './sass/main.scss';\r\nimport './code.js/timer';\r\n"]}